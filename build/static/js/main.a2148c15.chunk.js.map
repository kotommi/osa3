{"version":3,"sources":["services/contacts.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","contacts","axios","get","then","response","data","newObject","post","id","put","concat","delete","Filter","_ref","filter","handleFilter","react_default","a","createElement","value","onChange","PersonForm","props","onSubmit","addContact","newName","handleName","newNumber","handleNumber","type","PersonList","_ref2","getContacts","Notification","_ref3","message","error","color","includes","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","errorMessage","setErrorMessage","useEffect","contactService","personsToShow","length","person","name","toLowerCase","trim","editContact","contactObject","window","confirm","map","App_Notification","App_Filter","event","target","App_PersonForm","preventDefault","number","found","find","undefined","newPerson","catch","console","log","toString","changedContact","objectSpread","App_PersonList","key","onClick","p","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2148c15.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl).then();\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update, remove };\n","import React, { useState, useEffect } from \"react\";\nimport contactService from \"./services/contacts\";\n\nconst Filter = ({ filter, handleFilter }) => {\n  return (\n    <div>\n      rajaa näytettäviä <input value={filter} onChange={handleFilter} />\n    </div>\n  );\n};\n\nconst PersonForm = props => {\n  return (\n    <form onSubmit={props.addContact}>\n      <h3>lisää uusi</h3>\n      <div>\n        nimi: <input value={props.newName} onChange={props.handleName} />\n      </div>\n      <div>\n        numero: <input value={props.newNumber} onChange={props.handleNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">lisää</button>\n      </div>\n    </form>\n  );\n};\n\nconst PersonList = ({ getContacts }) => {\n  return (\n    <div>\n      <h2>Numerot</h2>\n      <ul>{getContacts()}</ul>\n    </div>\n  );\n};\n\nconst Notification = ({ message }) => {\n  if (message === null || message === \"\") {\n    return null;\n  }\n\n  const error = {\n    color: message.includes(\"valitettavasti\") || message.includes(\"fail\") ? \"red\" : \"green\",\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  };\n\n  return <div style={error}>{message}</div>;\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const personHook = () => {\n    contactService.getAll().then(persons => {\n      setPersons(persons);\n    });\n  };\n  // fetch persons from json\n  useEffect(personHook, []);\n\n  const personsToShow =\n    filter.length === 0\n      ? persons\n      : persons.filter(person => {\n          return person.name\n            .toLowerCase()\n            .includes(filter.trim().toLowerCase());\n        });\n\n  const addContact = event => {\n    event.preventDefault();\n    const contactObject = {\n      name: newName,\n      number: newNumber\n    };\n    const found = persons.find(person => {\n      return person.name === contactObject.name;\n    });\n    if (found !== undefined) {\n      const changedContact = { ...found, number: newNumber };\n      editContact(changedContact);\n      return;\n    }\n    contactService\n      .create(contactObject)\n      .then(newPerson => {\n        setPersons(persons.concat(newPerson));\n        setErrorMessage(`Lisättiin ${newPerson.name}`);\n      })\n      .catch(error => {\n        console.log(error.response.data);\n        setErrorMessage(error.response.data.error.toString());\n      });\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const editContact = contactObject => {\n    const ans = window.confirm(\n      `${\n        contactObject.name\n      } on jo luettelossa, korvataanko vanha numero uudella?`\n    );\n    if (!ans) {\n      return;\n    }\n    contactService.update(contactObject.id, contactObject).then(() => {\n      setPersons(\n        persons.map(person => {\n          return contactObject.id === person.id ? contactObject : person;\n        })\n      );\n      setErrorMessage(`Muokattiin ${contactObject.name}`);\n    });\n  };\n\n  const removeContact = (id, name) => {\n    const ans = window.confirm(`poistetaanko ${name}`);\n    if (!ans) {\n      return;\n    }\n    contactService\n      .remove(id)\n      .then(() => {\n        setPersons(\n          persons.filter(p => {\n            return p.id !== id;\n          })\n        );\n        setErrorMessage(`Poistettiin ${name}`);\n      })\n      .catch(error => {\n        setPersons(\n          persons.filter(p => {\n            return p.id !== id;\n          })\n        );\n        setErrorMessage(`${name} oli jo valitettavasti poistettu`);\n      });\n  };\n\n  const getContacts = () => {\n    return personsToShow.map(person => {\n      return (\n        <li key={person.id}>\n          {person.name} {person.number}\n          <button onClick={() => removeContact(person.id, person.name)}>\n            poista\n          </button>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Notification message={errorMessage} />\n      <Filter\n        filter={filter}\n        handleFilter={event => setFilter(event.target.value)}\n      />\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleName={event => setNewName(event.target.value)}\n        handleNumber={event => setNewNumber(event.target.value)}\n        addContact={addContact}\n      />\n      <PersonList getContacts={getContacts} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}